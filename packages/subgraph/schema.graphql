type System @entity {
  "There should be only one System entity with an ID of 'only'"
  id: ID!

  troveChangeCount: Int!
}

type Owner @entity {
  "Owner's Ethereum address as a hex-string"
  id: ID!

  currentTrove: Trove
  troveCount: Int!

  troves: [Trove!]! @derivedFrom(field: "owner")
}

type Trove @entity {
  "Owner's ID + '-' + an incremented integer"
  id: ID!

  owner: Owner!

  collateral: BigDecimal!
  debt: BigDecimal!

  changes: [TroveChange!]! @derivedFrom(field: "trove")

  rawCollateral: BigInt!
  rawDebt: BigInt!
  rawStake: BigInt!

  "Collateral divided by debt. Multiply by price to get the actual collateral ratio."
  rawCollateralPerDebt: BigInt!

  "The value of total redistributed per-stake collateral the last time rewards were applied"
  rawSnapshotOfTotalRedistributedCollateral: BigInt!

  "The value of total redistributed per-stake debt the last time rewards were applied"
  rawSnapshotOfTotalRedistributedDebt: BigInt!
}

enum TroveOperation {
  openLoan
  closeLoan
  depositCollateral
  withdrawCollateral
  mint
  repay
  adjustLoan
  accrueRewards
  liquidateInNormalMode
  liquidateInRecoveryMode
  partiallyLiquidateInRecoveryMode
  redeemCollateral
}

type TroveChange @entity {
  "Transaction hash + '-' + log index"
  id: ID!

  "Can be used to correctly sort changes even if some of their timestamps are the same"
  sequenceNumber: Int!

  "Timestamp of block that included this change (seconds since epoch)"
  timestamp: Int!

  trove: Trove!

  operation: TroveOperation!

  collateralBefore: BigDecimal!
  collateralChange: BigDecimal!
  collateralAfter: BigDecimal!

  debtBefore: BigDecimal!
  debtChange: BigDecimal!
  debtAfter: BigDecimal!
}
